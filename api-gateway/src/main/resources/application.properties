# Fichier : api-gateway/src/main/resources/application.properties

# Application Name
spring.application.name=api-gateway

# Server Configuration
server.port=8099

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# --- Gateway Routes Configuration (Centralisee et Corrigee) ---

# Route pour User Service (Port 8099 -> 8087)
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Route pour Commande Service
spring.cloud.gateway.routes[1].id=commande-service
spring.cloud.gateway.routes[1].uri=lb://COMMANDE-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/commande-service/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

# Route pour Boutique Service
spring.cloud.gateway.routes[2].id=boutique-service
spring.cloud.gateway.routes[2].uri=lb://BOUTIQUE-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/boutique-service/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

# Route pour Paiement-Abonnement Service (Port 8099 -> 8100)
spring.cloud.gateway.routes[3].id=paiementabonnement-service
spring.cloud.gateway.routes[3].uri=lb://PAIEMENTABONNEMENT-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/paiementabonnement-service/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

# Route pour Communication Service (Port 8099 -> 8091)
spring.cloud.gateway.routes[4].id=communication-service
spring.cloud.gateway.routes[4].uri=lb://COMMUNICATION-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/communication-service/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

# Route pour Evaluation Service (Port 8099 -> 8092)
spring.cloud.gateway.routes[5].id=evaluation-service
spring.cloud.gateway.routes[5].uri=lb://EVALUATION-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/evaluation-service/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1

# Route pour Livraison Service (Port 8099 -> 8089)
spring.cloud.gateway.routes[6].id=livraison-service
spring.cloud.gateway.routes[6].uri=lb://LIVRAISON-SERVICE
spring.cloud.gateway.routes[6].predicates[0]=Path=/livraison-service/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1

# Route pour RechercheAnalytics Service (Port 8099 -> 8093)
spring.cloud.gateway.routes[7].id=rechercheanalytics-service
spring.cloud.gateway.routes[7].uri=lb://RECHERCHEANALYTICS-SERVICE
spring.cloud.gateway.routes[7].predicates[0]=Path=/rechercheanalytics-service/**
spring.cloud.gateway.routes[7].filters[0]=StripPrefix=1

# Route pour Stock Service (Port 8099 -> 8096)
spring.cloud.gateway.routes[8].id=stock-service
spring.cloud.gateway.routes[8].uri=lb://STOCK-SERVICE
spring.cloud.gateway.routes[8].predicates[0]=Path=/stock-service/**
spring.cloud.gateway.routes[8].filters[0]=StripPrefix=1


# vous pouvez supprimer les CorsConfig.java dans les autres services.
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:5173,http://127.0.0.1:5173
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# Logging Configuration
logging.level.org.springframework.cloud.gateway=DEBUG